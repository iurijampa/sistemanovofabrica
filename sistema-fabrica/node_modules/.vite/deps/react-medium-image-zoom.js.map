{
  "version": 3,
  "sources": ["../../react-medium-image-zoom/dist/index.js"],
  "sourcesContent": ["'use client';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction ICompress() {\r\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\r\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\r\n}\r\nfunction IEnlarge() {\r\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\r\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\r\n}\r\n\r\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\r\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\r\nconst testImg = (el) => testElType('IMG', el);\r\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\r\nconst testSvg = (el) => testElType('SVG', el);\r\nconst getScaleToWindow = ({ height, offset, width }) => {\r\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\r\n};\r\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\r\n    const scale = getScaleToWindow({\r\n        height: targetHeight,\r\n        offset,\r\n        width: targetWidth,\r\n    });\r\n    const ratio = targetWidth > targetHeight\r\n        ? targetWidth / containerWidth\r\n        : targetHeight / containerHeight;\r\n    return scale > 1 ? ratio : scale * ratio;\r\n};\r\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\r\n    if (!containerHeight || !containerWidth) {\r\n        return 1;\r\n    }\r\n    return !hasScalableSrc && targetHeight && targetWidth\r\n        ? getScaleToWindowMax({\r\n            containerHeight,\r\n            containerWidth,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        })\r\n        : getScaleToWindow({\r\n            height: containerHeight,\r\n            offset,\r\n            width: containerWidth,\r\n        });\r\n};\r\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\r\nconst getImgSrc = (imgEl) => {\r\n    if (imgEl) {\r\n        if (testImg(imgEl)) {\r\n            return imgEl.currentSrc;\r\n        }\r\n        else if (testDiv(imgEl)) {\r\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\r\n            if (bgImg) {\r\n                return URL_REGEX.exec(bgImg)?.[1];\r\n            }\r\n        }\r\n    }\r\n};\r\nconst getImgAlt = (imgEl) => {\r\n    if (imgEl) {\r\n        if (testImg(imgEl)) {\r\n            return imgEl.alt ?? undefined;\r\n        }\r\n        else {\r\n            return imgEl.getAttribute('aria-label') ?? undefined;\r\n        }\r\n    }\r\n};\r\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\r\n    const scale = getScale({\r\n        containerHeight,\r\n        containerWidth,\r\n        hasScalableSrc,\r\n        offset,\r\n        targetHeight,\r\n        targetWidth,\r\n    });\r\n    return {\r\n        top: containerTop,\r\n        left: containerLeft,\r\n        width: containerWidth * scale,\r\n        height: containerHeight * scale,\r\n        transform: `translate(0,0) scale(${1 / scale})`,\r\n    };\r\n};\r\nconst parsePosition = ({ position, relativeNum }) => {\r\n    const positionNum = parseFloat(position);\r\n    return position.endsWith('%')\r\n        ? relativeNum * positionNum / 100\r\n        : positionNum;\r\n};\r\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\r\n    if (objectFit === 'scale-down') {\r\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\r\n            objectFit = 'none';\r\n        }\r\n        else {\r\n            objectFit = 'contain';\r\n        }\r\n    }\r\n    if (objectFit === 'cover' || objectFit === 'contain') {\r\n        const widthRatio = containerWidth / targetWidth;\r\n        const heightRatio = containerHeight / targetHeight;\r\n        const ratio = objectFit === 'cover'\r\n            ? Math.max(widthRatio, heightRatio)\r\n            : Math.min(widthRatio, heightRatio);\r\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\r\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\r\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\r\n        const scale = getScale({\r\n            containerHeight: targetHeight * ratio,\r\n            containerWidth: targetWidth * ratio,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        });\r\n        return {\r\n            top: containerTop + posY,\r\n            left: containerLeft + posX,\r\n            width: targetWidth * ratio * scale,\r\n            height: targetHeight * ratio * scale,\r\n            transform: `translate(0,0) scale(${1 / scale})`,\r\n        };\r\n    }\r\n    else if (objectFit === 'none') {\r\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\r\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\r\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\r\n        const scale = getScale({\r\n            containerHeight: targetHeight,\r\n            containerWidth: targetWidth,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        });\r\n        return {\r\n            top: containerTop + posY,\r\n            left: containerLeft + posX,\r\n            width: targetWidth * scale,\r\n            height: targetHeight * scale,\r\n            transform: `translate(0,0) scale(${1 / scale})`,\r\n        };\r\n    }\r\n    else if (objectFit === 'fill') {\r\n        const widthRatio = containerWidth / targetWidth;\r\n        const heightRatio = containerHeight / targetHeight;\r\n        const ratio = Math.max(widthRatio, heightRatio);\r\n        const scale = getScale({\r\n            containerHeight: targetHeight * ratio,\r\n            containerWidth: targetWidth * ratio,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        });\r\n        return {\r\n            width: containerWidth * scale,\r\n            height: containerHeight * scale,\r\n            transform: `translate(0,0) scale(${1 / scale})`,\r\n        };\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n};\r\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\r\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\r\n        const widthRatio = containerWidth / targetWidth;\r\n        const heightRatio = containerHeight / targetHeight;\r\n        const ratio = backgroundSize === 'cover'\r\n            ? Math.max(widthRatio, heightRatio)\r\n            : Math.min(widthRatio, heightRatio);\r\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\r\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\r\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\r\n        const scale = getScale({\r\n            containerHeight: targetHeight * ratio,\r\n            containerWidth: targetWidth * ratio,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        });\r\n        return {\r\n            top: containerTop + posY,\r\n            left: containerLeft + posX,\r\n            width: targetWidth * ratio * scale,\r\n            height: targetHeight * ratio * scale,\r\n            transform: `translate(0,0) scale(${1 / scale})`,\r\n        };\r\n    }\r\n    else if (backgroundSize === 'auto') {\r\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\r\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\r\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\r\n        const scale = getScale({\r\n            containerHeight: targetHeight,\r\n            containerWidth: targetWidth,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        });\r\n        return {\r\n            top: containerTop + posY,\r\n            left: containerLeft + posX,\r\n            width: targetWidth * scale,\r\n            height: targetHeight * scale,\r\n            transform: `translate(0,0) scale(${1 / scale})`,\r\n        };\r\n    }\r\n    else {\r\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\r\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\r\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\r\n        const widthRatio = sizeWidth / targetWidth;\r\n        const heightRatio = sizeHeight / targetHeight;\r\n        const ratio = Math.min(widthRatio, heightRatio);\r\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\r\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\r\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\r\n        const scale = getScale({\r\n            containerHeight: targetHeight * ratio,\r\n            containerWidth: targetWidth * ratio,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight,\r\n            targetWidth,\r\n        });\r\n        return {\r\n            top: containerTop + posY,\r\n            left: containerLeft + posX,\r\n            width: targetWidth * ratio * scale,\r\n            height: targetHeight * ratio * scale,\r\n            transform: `translate(0,0) scale(${1 / scale})`,\r\n        };\r\n    }\r\n};\r\nconst SRC_SVG_REGEX = /\\.svg$/i;\r\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\r\n    const hasScalableSrc = isSvg ||\r\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\r\n        hasZoomImg ||\r\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\r\n    const imgRect = targetEl.getBoundingClientRect();\r\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\r\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\r\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\r\n    const styleImgRegular = getImgRegularStyle({\r\n        containerHeight: imgRect.height,\r\n        containerLeft: imgRect.left,\r\n        containerTop: imgRect.top,\r\n        containerWidth: imgRect.width,\r\n        hasScalableSrc,\r\n        offset,\r\n        targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\r\n        targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\r\n    });\r\n    const styleImgObjectFit = isImgObjectFit\r\n        ? getImgObjectFitStyle({\r\n            containerHeight: imgRect.height,\r\n            containerLeft: imgRect.left,\r\n            containerTop: imgRect.top,\r\n            containerWidth: imgRect.width,\r\n            hasScalableSrc,\r\n            objectFit: targetElComputedStyle.objectFit,\r\n            objectPosition: targetElComputedStyle.objectPosition,\r\n            offset,\r\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\r\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\r\n        })\r\n        : undefined;\r\n    const styleDivImg = isDivImg\r\n        ? getDivImgStyle({\r\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\r\n            backgroundSize: targetElComputedStyle.backgroundSize,\r\n            containerHeight: imgRect.height,\r\n            containerLeft: imgRect.left,\r\n            containerTop: imgRect.top,\r\n            containerWidth: imgRect.width,\r\n            hasScalableSrc,\r\n            offset,\r\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\r\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\r\n        })\r\n        : undefined;\r\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\r\n    if (isZoomed) {\r\n        const viewportX = window.innerWidth / 2;\r\n        const viewportY = window.innerHeight / 2;\r\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\r\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\r\n        const translateX = viewportX - childCenterX;\r\n        const translateY = viewportY - childCenterY;\r\n        if (shouldRefresh) {\r\n            style.transitionDuration = '0.01ms';\r\n        }\r\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\r\n    }\r\n    return style;\r\n};\r\nconst getStyleGhost = (imgEl) => {\r\n    if (!imgEl) {\r\n        return {};\r\n    }\r\n    if (testSvg(imgEl)) {\r\n        const parentEl = imgEl.parentElement;\r\n        const rect = imgEl.getBoundingClientRect();\r\n        if (parentEl) {\r\n            const parentRect = parentEl.getBoundingClientRect();\r\n            return {\r\n                height: rect.height,\r\n                left: parentRect.left - rect.left,\r\n                top: parentRect.top - rect.top,\r\n                width: rect.width,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                height: rect.height,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                top: rect.top,\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            height: imgEl.offsetHeight,\r\n            left: imgEl.offsetLeft,\r\n            width: imgEl.offsetWidth,\r\n            top: imgEl.offsetTop,\r\n        };\r\n    }\r\n};\r\nconst adjustSvgIDs = (svgEl) => {\r\n    const newIdSuffix = '-zoom';\r\n    const attrs = [\r\n        'clip-path',\r\n        'fill',\r\n        'mask',\r\n        'marker-start',\r\n        'marker-mid',\r\n        'marker-end',\r\n    ];\r\n    const idMap = new Map();\r\n    if (svgEl.hasAttribute('id')) {\r\n        const oldId = svgEl.id;\r\n        const newId = oldId + newIdSuffix;\r\n        idMap.set(oldId, newId);\r\n        svgEl.id = newId;\r\n    }\r\n    svgEl.querySelectorAll('[id]').forEach(el => {\r\n        const oldId = el.id;\r\n        const newId = oldId + newIdSuffix;\r\n        idMap.set(oldId, newId);\r\n        el.id = newId;\r\n    });\r\n    idMap.forEach((newId, oldId) => {\r\n        const urlOldID = `url(#${oldId})`;\r\n        const urlNewID = `url(#${newId})`;\r\n        const attrsQuery = attrs.map(attr => `[${attr}=\"${urlOldID}\"]`).join(', ');\r\n        svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\r\n            attrs.forEach(attr => {\r\n                if (usedEl.getAttribute(attr) === urlOldID) {\r\n                    usedEl.setAttribute(attr, urlNewID);\r\n                }\r\n            });\r\n        });\r\n    });\r\n    svgEl.querySelectorAll('style').forEach(styleEl => {\r\n        idMap.forEach((newId, oldId) => {\r\n            if (styleEl.textContent) {\r\n                styleEl.textContent = styleEl.textContent.replaceAll(`#${oldId}`, `#${newId}`);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\r\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\r\n    .join(',');\r\nconst defaultBodyAttrs = {\r\n    overflow: '',\r\n    width: '',\r\n};\r\nfunction Controlled(props) {\r\n    return React.createElement(ControlledBase, { ...props });\r\n}\r\nclass ControlledBase extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            id: '',\r\n            isZoomImgLoaded: false,\r\n            loadedImgEl: undefined,\r\n            modalState: \"UNLOADED\",\r\n            shouldRefresh: false,\r\n            styleGhost: {},\r\n        };\r\n        this.refContent = React.createRef();\r\n        this.refDialog = React.createRef();\r\n        this.refModalContent = React.createRef();\r\n        this.refModalImg = React.createRef();\r\n        this.refWrap = React.createRef();\r\n        this.imgEl = null;\r\n        this.isScaling = false;\r\n        this.prevBodyAttrs = defaultBodyAttrs;\r\n        this.styleModalImg = {};\r\n        this.handleModalStateChange = (prevModalState) => {\r\n            const { modalState } = this.state;\r\n            if (prevModalState !== \"LOADING\" && modalState === \"LOADING\") {\r\n                this.loadZoomImg();\r\n                window.addEventListener('resize', this.handleResize, { passive: true });\r\n                window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\r\n                window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\r\n                window.addEventListener('touchend', this.handleTouchEnd, { passive: true });\r\n                window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\r\n                document.addEventListener('keydown', this.handleKeyDown, true);\r\n            }\r\n            else if (prevModalState !== \"LOADED\" && modalState === \"LOADED\") {\r\n                window.addEventListener('wheel', this.handleWheel, { passive: true });\r\n            }\r\n            else if (prevModalState !== \"UNLOADING\" && modalState === \"UNLOADING\") {\r\n                this.ensureImgTransitionEnd();\r\n                window.removeEventListener('wheel', this.handleWheel);\r\n                window.removeEventListener('touchstart', this.handleTouchStart);\r\n                window.removeEventListener('touchmove', this.handleTouchMove);\r\n                window.removeEventListener('touchend', this.handleTouchEnd);\r\n                window.removeEventListener('touchcancel', this.handleTouchCancel);\r\n                document.removeEventListener('keydown', this.handleKeyDown, true);\r\n            }\r\n            else if (prevModalState !== \"UNLOADED\" && modalState === \"UNLOADED\") {\r\n                this.bodyScrollEnable();\r\n                window.removeEventListener('resize', this.handleResize);\r\n                this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\r\n                this.refDialog.current?.close?.();\r\n            }\r\n        };\r\n        this.getDialogContainer = () => {\r\n            let el = document.querySelector('[data-rmiz-portal]');\r\n            if (el == null) {\r\n                el = document.createElement('div');\r\n                el.setAttribute('data-rmiz-portal', '');\r\n                document.body.appendChild(el);\r\n            }\r\n            return el;\r\n        };\r\n        this.setId = () => {\r\n            const gen4 = () => Math.random().toString(16).slice(-4);\r\n            this.setState({ id: gen4() + gen4() + gen4() });\r\n        };\r\n        this.setAndTrackImg = () => {\r\n            const contentEl = this.refContent.current;\r\n            if (!contentEl)\r\n                return;\r\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\r\n            if (this.imgEl) {\r\n                this.contentNotFoundChangeObserver?.disconnect?.();\r\n                this.imgEl.addEventListener('load', this.handleImgLoad);\r\n                this.imgEl.addEventListener('click', this.handleZoom);\r\n                if (!this.state.loadedImgEl) {\r\n                    this.handleImgLoad();\r\n                }\r\n                this.imgElResizeObserver = new ResizeObserver(entries => {\r\n                    const entry = entries[0];\r\n                    if (entry?.target) {\r\n                        this.imgEl = entry.target;\r\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\r\n                    }\r\n                });\r\n                this.imgElResizeObserver.observe(this.imgEl);\r\n                if (!this.contentChangeObserver) {\r\n                    this.contentChangeObserver = new MutationObserver(() => {\r\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\r\n                    });\r\n                    this.contentChangeObserver.observe(contentEl, { attributes: true, childList: true, subtree: true });\r\n                }\r\n            }\r\n            else if (!this.contentNotFoundChangeObserver) {\r\n                this.contentNotFoundChangeObserver = new MutationObserver(this.setAndTrackImg);\r\n                this.contentNotFoundChangeObserver.observe(contentEl, { childList: true, subtree: true });\r\n            }\r\n        };\r\n        this.handleIfZoomChanged = (prevIsZoomed) => {\r\n            const { isZoomed } = this.props;\r\n            if (!prevIsZoomed && isZoomed) {\r\n                this.zoom();\r\n            }\r\n            else if (prevIsZoomed && !isZoomed) {\r\n                this.unzoom();\r\n            }\r\n        };\r\n        this.handleImgLoad = () => {\r\n            const imgSrc = getImgSrc(this.imgEl);\r\n            if (!imgSrc)\r\n                return;\r\n            const img = new Image();\r\n            if (testImg(this.imgEl)) {\r\n                img.sizes = this.imgEl.sizes;\r\n                img.srcset = this.imgEl.srcset;\r\n                img.crossOrigin = this.imgEl.crossOrigin;\r\n            }\r\n            img.src = imgSrc;\r\n            const setLoaded = () => {\r\n                this.setState({\r\n                    loadedImgEl: img,\r\n                    styleGhost: getStyleGhost(this.imgEl),\r\n                });\r\n            };\r\n            img\r\n                .decode()\r\n                .then(setLoaded)\r\n                .catch(() => {\r\n                if (testImgLoaded(img)) {\r\n                    setLoaded();\r\n                    return;\r\n                }\r\n                img.onload = setLoaded;\r\n            });\r\n        };\r\n        this.handleZoom = () => {\r\n            if (!this.props.isDisabled && this.hasImage()) {\r\n                this.props.onZoomChange?.(true);\r\n            }\r\n        };\r\n        this.handleUnzoom = () => {\r\n            if (!this.props.isDisabled) {\r\n                this.props.onZoomChange?.(false);\r\n            }\r\n        };\r\n        this.handleBtnUnzoomClick = (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.handleUnzoom();\r\n        };\r\n        this.handleDialogCancel = (e) => {\r\n            e.preventDefault();\r\n        };\r\n        this.handleDialogClick = (e) => {\r\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\r\n                e.stopPropagation();\r\n                this.handleUnzoom();\r\n            }\r\n        };\r\n        this.handleDialogClose = (e) => {\r\n            e.stopPropagation();\r\n            this.handleUnzoom();\r\n        };\r\n        this.handleKeyDown = (e) => {\r\n            if (e.key === 'Escape' || e.keyCode === 27) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.handleUnzoom();\r\n            }\r\n        };\r\n        this.handleWheel = (e) => {\r\n            if (e.ctrlKey)\r\n                return;\r\n            e.stopPropagation();\r\n            queueMicrotask(() => {\r\n                this.handleUnzoom();\r\n            });\r\n        };\r\n        this.handleTouchStart = (e) => {\r\n            if (e.touches.length > 1) {\r\n                this.isScaling = true;\r\n                return;\r\n            }\r\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\r\n                this.touchYStart = e.changedTouches[0].screenY;\r\n            }\r\n        };\r\n        this.handleTouchMove = (e) => {\r\n            const browserScale = window.visualViewport?.scale ?? 1;\r\n            if (this.props.canSwipeToUnzoom &&\r\n                !this.isScaling &&\r\n                browserScale <= 1 && this.touchYStart != null &&\r\n                e.changedTouches[0]) {\r\n                this.touchYEnd = e.changedTouches[0].screenY;\r\n                const max = Math.max(this.touchYStart, this.touchYEnd);\r\n                const min = Math.min(this.touchYStart, this.touchYEnd);\r\n                const delta = Math.abs(max - min);\r\n                if (delta > this.props.swipeToUnzoomThreshold) {\r\n                    this.touchYStart = undefined;\r\n                    this.touchYEnd = undefined;\r\n                    this.handleUnzoom();\r\n                }\r\n            }\r\n        };\r\n        this.handleTouchEnd = () => {\r\n            this.isScaling = false;\r\n            this.touchYStart = undefined;\r\n            this.touchYEnd = undefined;\r\n        };\r\n        this.handleTouchCancel = () => {\r\n            this.isScaling = false;\r\n            this.touchYStart = undefined;\r\n            this.touchYEnd = undefined;\r\n        };\r\n        this.handleResize = () => {\r\n            this.setState({ shouldRefresh: true });\r\n        };\r\n        this.hasImage = () => {\r\n            return this.imgEl &&\r\n                (this.state.loadedImgEl || testSvg(this.imgEl)) &&\r\n                window.getComputedStyle(this.imgEl).display !== 'none';\r\n        };\r\n        this.zoom = () => {\r\n            this.bodyScrollDisable();\r\n            this.refDialog.current?.showModal?.();\r\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleImgTransitionEnd);\r\n            this.setState({ modalState: \"LOADING\" });\r\n        };\r\n        this.unzoom = () => {\r\n            this.setState({ modalState: \"UNLOADING\" });\r\n        };\r\n        this.handleImgTransitionEnd = () => {\r\n            clearTimeout(this.timeoutTransitionEnd);\r\n            if (this.state.modalState === \"LOADING\") {\r\n                this.setState({ modalState: \"LOADED\" });\r\n            }\r\n            else if (this.state.modalState === \"UNLOADING\") {\r\n                this.setState({ shouldRefresh: false, modalState: \"UNLOADED\" });\r\n            }\r\n        };\r\n        this.ensureImgTransitionEnd = () => {\r\n            if (this.refModalImg.current) {\r\n                const td = window.getComputedStyle(this.refModalImg.current).transitionDuration;\r\n                const tdFloat = parseFloat(td);\r\n                if (tdFloat) {\r\n                    const tdMs = tdFloat * (td.endsWith('ms') ? 1 : 1000) + 50;\r\n                    this.timeoutTransitionEnd = setTimeout(this.handleImgTransitionEnd, tdMs);\r\n                }\r\n            }\r\n        };\r\n        this.bodyScrollDisable = () => {\r\n            this.prevBodyAttrs = {\r\n                overflow: document.body.style.overflow,\r\n                width: document.body.style.width,\r\n            };\r\n            const clientWidth = document.body.clientWidth;\r\n            document.body.style.overflow = 'hidden';\r\n            document.body.style.width = `${clientWidth}px`;\r\n        };\r\n        this.bodyScrollEnable = () => {\r\n            document.body.style.width = this.prevBodyAttrs.width;\r\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\r\n            this.prevBodyAttrs = defaultBodyAttrs;\r\n        };\r\n        this.loadZoomImg = () => {\r\n            const { props: { zoomImg } } = this;\r\n            const zoomImgSrc = zoomImg?.src;\r\n            if (zoomImgSrc) {\r\n                const img = new Image();\r\n                img.sizes = zoomImg?.sizes ?? '';\r\n                img.srcset = zoomImg?.srcSet ?? '';\r\n                img.crossOrigin = zoomImg?.crossOrigin ?? undefined;\r\n                img.src = zoomImgSrc;\r\n                const setLoaded = () => {\r\n                    this.setState({ isZoomImgLoaded: true });\r\n                };\r\n                img\r\n                    .decode()\r\n                    .then(setLoaded)\r\n                    .catch(() => {\r\n                    if (testImgLoaded(img)) {\r\n                        setLoaded();\r\n                        return;\r\n                    }\r\n                    img.onload = setLoaded;\r\n                });\r\n            }\r\n        };\r\n        this.UNSAFE_handleSvg = () => {\r\n            const { imgEl, refModalImg, styleModalImg } = this;\r\n            if (testSvg(imgEl)) {\r\n                const svgEl = imgEl.cloneNode(true);\r\n                adjustSvgIDs(svgEl);\r\n                svgEl.style.width = `${styleModalImg.width || 0}px`;\r\n                svgEl.style.height = `${styleModalImg.height || 0}px`;\r\n                svgEl.addEventListener('click', this.handleUnzoom);\r\n                refModalImg.current?.firstChild?.remove?.();\r\n                refModalImg.current?.appendChild?.(svgEl);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { handleBtnUnzoomClick, handleDialogCancel, handleDialogClick, handleDialogClose, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, styleGhost, }, } = this;\r\n        const idModal = `rmiz-modal-${id}`;\r\n        const idModalImg = `rmiz-modal-img-${id}`;\r\n        const isDiv = testDiv(imgEl);\r\n        const isImg = testImg(imgEl);\r\n        const isSvg = testSvg(imgEl);\r\n        const imgAlt = getImgAlt(imgEl);\r\n        const imgSrc = getImgSrc(imgEl);\r\n        const imgSizes = isImg ? imgEl.sizes : undefined;\r\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\r\n        const imgCrossOrigin = isImg ? imgEl.crossOrigin : undefined;\r\n        const hasZoomImg = !!zoomImg?.src;\r\n        const hasImage = this.hasImage();\r\n        const labelBtnZoom = imgAlt\r\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\r\n            : a11yNameButtonZoom;\r\n        const isModalActive = modalState === \"LOADING\" ||\r\n            modalState === \"LOADED\";\r\n        const dataContentState = hasImage ? 'found' : 'not-found';\r\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\r\n            ? 'hidden'\r\n            : 'visible';\r\n        const styleContent = {\r\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\r\n        };\r\n        this.styleModalImg = hasImage\r\n            ? getStyleModalImg({\r\n                hasZoomImg,\r\n                imgSrc,\r\n                isSvg,\r\n                isZoomed: isZoomed && isModalActive,\r\n                loadedImgEl,\r\n                offset: zoomMargin,\r\n                shouldRefresh,\r\n                targetEl: imgEl,\r\n            })\r\n            : {};\r\n        let modalContent = null;\r\n        if (hasImage) {\r\n            const modalImg = isImg || isDiv\r\n                ? React.createElement(\"img\", { alt: imgAlt, crossOrigin: imgCrossOrigin, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\r\n                : isSvg\r\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\r\n                    : null;\r\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleBtnUnzoomClick, type: \"button\" },\r\n                React.createElement(IconUnzoom, null));\r\n            modalContent = ZoomContent\r\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, isZoomImgLoaded: isZoomImgLoaded, onUnzoom: handleUnzoom })\r\n                : React.createElement(React.Fragment, null,\r\n                    modalImg,\r\n                    modalBtnUnzoom);\r\n        }\r\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\r\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\r\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\r\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\r\n                    React.createElement(IconZoom, null))),\r\n            hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleDialogClose, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\r\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\r\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), this.getDialogContainer())));\r\n    }\r\n    componentDidMount() {\r\n        this.setId();\r\n        this.setAndTrackImg();\r\n        this.handleImgLoad();\r\n        this.UNSAFE_handleSvg();\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.state.modalState !== \"UNLOADED\") {\r\n            this.bodyScrollEnable();\r\n        }\r\n        this.contentChangeObserver?.disconnect?.();\r\n        this.contentNotFoundChangeObserver?.disconnect?.();\r\n        this.imgElResizeObserver?.disconnect?.();\r\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\r\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\r\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\r\n        window.removeEventListener('wheel', this.handleWheel);\r\n        window.removeEventListener('touchstart', this.handleTouchStart);\r\n        window.removeEventListener('touchmove', this.handleTouchMove);\r\n        window.removeEventListener('touchend', this.handleTouchEnd);\r\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\r\n        window.removeEventListener('resize', this.handleResize);\r\n        document.removeEventListener('keydown', this.handleKeyDown, true);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        this.handleModalStateChange(prevState.modalState);\r\n        this.UNSAFE_handleSvg();\r\n        this.handleIfZoomChanged(prevProps.isZoomed);\r\n    }\r\n}\r\nControlledBase.defaultProps = {\r\n    a11yNameButtonUnzoom: 'Minimize image',\r\n    a11yNameButtonZoom: 'Expand image',\r\n    canSwipeToUnzoom: true,\r\n    IconUnzoom: ICompress,\r\n    IconZoom: IEnlarge,\r\n    isDisabled: false,\r\n    swipeToUnzoomThreshold: 10,\r\n    wrapElement: 'div',\r\n    zoomMargin: 0,\r\n};\r\n\r\nfunction Uncontrolled(props) {\r\n    const [isZoomed, setIsZoomed] = React.useState(false);\r\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\r\n}\r\n\r\nexport { Controlled, Uncontrolled as default };\r\n"],
  "mappings": "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",
  "names": ["React", "ReactDOM"]
}
